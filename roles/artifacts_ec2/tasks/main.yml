- name: Configure Mule-l1p.properties files
  local_action:
    module: blockinfile
    create: yes
    dest: "artifacts/mule_artifacts/conf/mule-l1p.properties.1"
    block: |
      dfsp-host={{ hostvars.dfsp1.ec2_facts.public_dns_name }}
      ilp-host={{ hostvars.dfsp1.ec2_facts.public_dns_name }}
      central-dir-env=mock
      proxy-host={{ hostvars.dfsp1.ec2_facts.public_dns_name }}
      central-dir-host={{ hostvars.cst1.ec2_facts.public_dns_name }}
      central-dir-api.port=3000
      central-fraud-sharing-host={{ hostvars.cst1.ec2_facts.public_dns_name }}
      central-fraud-sharing-api.port=3003
      mock-central-dir.host={{ hostvars.cst1.ec2_facts.public_dns_name }}
      mock-central-dir.port=8088
      metrics.reporter.kafka.broker={{ hostvars.mgmt1.ec2_facts.public_dns_name }}:9092
      environment=dfsp1-test
      metrics.reporter.environment=dfsp1-{{ name_tag }}
      maxHttpThreadsActive=16
      maxHttpThreadsIdle=4

- local_action:
    module: blockinfile
    create: yes
    dest: "artifacts/mule_artifacts/conf/mule-l1p.properties.2"
    block: |
      dfsp-host={{ hostvars.dfsp2.ec2_facts.public_dns_name }}
      ilp-host={{ hostvars.dfsp2.ec2_facts.public_dns_name }}
      central-dir-env=mock
      proxy-host={{ hostvars.dfsp2.ec2_facts.public_dns_name }}
      central-dir-host={{ hostvars.cst1.ec2_facts.public_dns_name }}
      central-dir-api.port=3000
      central-fraud-sharing-host={{ hostvars.cst1.ec2_facts.public_dns_name }}
      central-fraud-sharing-api.port=3003
      mock-central-dir.host={{ hostvars.cst1.ec2_facts.public_dns_name }}
      mock-central-dir.port=8088
      metrics.reporter.kafka.broker={{ hostvars.mgmt1.ec2_facts.public_dns_name }}:9092
      environment=dfsp2-test
      metrics.reporter.environment=dfsp2-{{ name_tag }}
      maxHttpThreadsActive=16
      maxHttpThreadsIdle=4

- local_action:
    module: blockinfile
    create: yes
    dest: "artifacts/mule_artifacts/conf_ist/mule-l1p.properties.cst"
    block: |
      central-dir-env=mock
      mock-central-dir.host={{ hostvars.cst1.ec2_facts.public_dns_name }}
      mock-central-dir.port=8088
      metrics.reporter.kafka.broker={{ hostvars.mgmt1.ec2_facts.public_dns_name }}:9092
      environment=ist1-test
      metrics.reporter.environment=ist1-{{ name_tag }}
      maxHttpThreadsActive=16
      maxHttpThreadsIdle=4

- name: Configure adapter-mapping.properties
  local_action:
    module: blockinfile
    create: yes
    dest: "artifacts/mule_artifacts/conf/adapter-mapping.properties.1"
    block: |
      mapping-dfsp-host={{ hostvars.dfsp1.ec2_facts.public_dns_name }}
      mapping-proxy-host={{ hostvars.dfsp1.ec2_facts.public_dns_name }}

- local_action:
    module: blockinfile
    create: yes
    dest: "artifacts/mule_artifacts/conf/adapter-mapping.properties.2"
    block: |
      mapping-dfsp-host={{ hostvars.dfsp2.ec2_facts.public_dns_name }}
      mapping-proxy-host={{ hostvars.dfsp2.ec2_facts.public_dns_name }}

- name: Add the newly created EC2 instance(s) to /etc/hosts
  local_action:
    module: lineinfile
    dest: "artifacts/etchosts"
    create: yes
    insertafter: EOF
    line: "{{ item.public_ip_address }} {{ item.tags.L1Ptype }}{{ item.ami_launch_index|int + 1 }}"
  with_items: "{{ ec2instances.instances }}"

- name: Setup known_hosts
  shell: /usr/bin/ssh-keyscan {{ item.public_ip_address }} >> ~/.ssh/known_hosts
  with_items:  "{{ ec2instances.instances }}"



# Ansible playbook for deploying the
# ilp-connector, ilp-spsp-client-rest, and ilp-spsp-server
# to the L1P test integration environment

# Note this must be run with the CLI param --extra-vars="docker_username=... docker_password=... docker_email=..."
---
#  - debug:
#      var: {{ inventory_hostname | regex_replace('dfsp') }}
  - include_vars:
      file: versions/{{ env }}/modusboxversions.yml

  - name: copy Mule properties file to appropriate server
    become: yes
    copy:
      src: artifacts/mule_artifacts/conf_switch/mule-l1p.properties.switch
      dest: ~/mule-l1p.properties

#  - name: copy Mule adapter-mapping file to appropriate server
#    become: yes
#    copy:
#      src: artifacts/mule_artifacts/conf/adapter-mapping.properties.{{ inventory_hostname | regex_replace('dfsp') }}
#      dest: ~/adapter-mapping.properties

  - name: Copy over mule
    copy:
      src: ./mule_switch.gz
      dest: ~/mule_switch.gz

  - name: Unpack Mule
    unarchive:
      src: ~/mule_switch.gz
      dest: ~/.
      remote_src: true

  - name: Ensure scripts have execute
    file:
      path: /root/deploy/mule_standalone_switch.sh
      mode: 0755

  - file:
      path: /root/deploy/deploy_mule_switch.sh
      mode: 0755

  - name: Deploy Mule Application
    become: true
    shell: ./mule_standalone_switch.sh
    args:
      chdir: /root/deploy/

  - name: Deploy Mule Artifacts
    become: true
    shell: ./deploy_mule_switch.sh
    args:
      chdir: /root/deploy/


  - name: start postgres
    docker_container:
      name: postgres-interop
      image: postgres:9.6.5
      env:
        POSTGRES_PASSWORD: "postgres"
        POSTGRES_USER: "postgres"
        SERVICE_5432_NAME: 'postgres'
      ports: 8102:5432
      restart_policy: always

  - name: Waiting to make sure postgres is started
    wait_for:
      port: 8102
      delay: 10

  - postgresql_db:
      login_host: '{{ worker_host }}'
      port: 8102
      login_user: postgres
      login_password: postgres
      name: mojaloop
      encoding: UTF-8

  - postgresql_user:
      login_host: '{{ worker_host }}'
      port: 8102
      login_user: postgres
      login_password: postgres
      db: mojaloop
      name: mojaloop
      password: 0f44a46921c79f9e179e9947f5fb6bf3
      encrypted: yes

  - postgresql_schema:
      login_host: '{{ worker_host }}'
      port: 8102
      login_user: postgres
      login_password: postgres
      name: switch
      database: mojaloop
      owner: mojaloop
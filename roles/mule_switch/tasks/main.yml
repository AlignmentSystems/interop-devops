# Ansible playbook for deploying the
# ilp-connector, ilp-spsp-client-rest, and ilp-spsp-server
# to the L1P test integration environment

# Note this must be run with the CLI param --extra-vars="docker_username=... docker_password=... docker_email=..."
---

- include_vars:
    file: versions/{{ env }}/modusboxversions.yml

- name: start postgres
  docker_container:
    name: postgres-interop
    image: postgres:9.6.5
    env:
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_USER: 'postgres'
      SERVICE_5432_NAME: 'postgres'
    ports: 8102:5432
    restart_policy: always

- name: Waiting to make sure postgres is started
  wait_for:
    port: 8102
    delay: 10

- postgresql_db:
    login_host: '{{ worker_host }}'
    port: 8102
    login_user: postgres
    login_password: postgres
    name: mojaloop
    encoding: UTF-8

- postgresql_user:
    login_host: '{{ worker_host }}'
    port: 8102
    login_user: postgres
    login_password: postgres
    db: mojaloop
    name: mojaloop
    password: mojaloop
    encrypted: no

- postgresql_schema:
    login_host: '{{ worker_host }}'
    port: 8102
    login_user: postgres
    login_password: postgres
    name: switch
    database: mojaloop
    owner: mojaloop

- name: Create table participant_fsp_mapping
  shell: PGPASSWORD=mojaloop psql -U mojaloop -h 127.0.0.1 -p 8102 -c "CREATE TABLE mojaloop.switch.participant_fsp_mapping (uuid uuid NOT NULL, type text COLLATE pg_catalog."default", id text COLLATE pg_catalog."default", sub_id text COLLATE pg_catalog."default", fsp_id text COLLATE pg_catalog."default", created_by text COLLATE pg_catalog."default", created_date timestamp with time zone DEFAULT now(), updated_by text COLLATE pg_catalog."default", updated_date timestamp with time zone DEFAULT now(), CONSTRAINT participant_fsp_mapping_pkey PRIMARY KEY (uuid)) WITH ( OIDS = FALSE) TABLESPACE pg_default;"
  register: result
  ignore_errors: true
  changed_when: "'CREATE TABLE' in result.stdout"

- name: Create table fsp_details
  shell: PGPASSWORD=mojaloop psql -U mojaloop -h 127.0.0.1 -p 8102 -c "CREATE TABLE mojaloop.switch.fsp_details (fsp_id text COLLATE pg_catalog."default" NOT NULL, callback_url text COLLATE pg_catalog."default", connector_port text COLLATE pg_catalog."default", CONSTRAINT fsp_details_pkey PRIMARY KEY (fsp_id)) WITH (OIDS = FALSE) TABLESPACE pg_default;"
  register: result
  ignore_errors: true
  changed_when: "'CREATE TABLE' in result.stdout"

- name: Start interop-routing
  become: true
  docker_container:
    name: interop-routing
    image: "mojaloop/interop-routing:{{ v_interop_routing }}"
    restart_policy: always
    state: started
    restart: yes
    log_driver: syslog
    log_options:
      syslog-address: 'tcp://{{ log_ip }}:514'
      syslog-facility: daemon
      tag: interop-routing
    ports:
      - "8088:8088"
    env:
      SERVICE_8088_NAME: 'interop-routing'
      MAX_JVM_MEMORY: '256'
      ROUTING_SERVICE_HOST: '0.0.0.0'
      ROUTING_SERVICE_PORT: '8088'
      SWITCH_SERVICE_HOST: '{{ worker_host }}'
      SWITCH_SERVICE_PORT: '8089'
      CONNECTOR_HOST: '{{ worker_host }}'
      ACCOUNT_LOOKUP_SERVICE_HOST: '{{ worker_host }}'
      ACCOUNT_LOOKUP_SERVICE_PORT: '8090'
      PSQL_HOST: '{{ worker_host }}'
      PSQL_PORT: '8102'

- name: Start interop-switch
  become: true
  docker_container:
    name: interop-switch
    image: "mojaloop/interop-switch:{{ v_interop_switch }}"
    restart_policy: always
    state: started
    networks:
      - name: MOJALOOP_NET
    restart: yes
    log_driver: syslog
    log_options:
      syslog-address: 'tcp://{{ log_ip }}:514'
      syslog-facility: daemon
      tag: interop-switch
    ports:
      - "8089:8089"
    env:
      SERVICE_8089_NAME: 'interop-switch'
      MAX_JVM_MEMORY: '256'
      SWITCH_SERVICE_HOST: '0.0.0.0'
      SWITCH_SERVICE_PORT: '8089'
      ACCOUNT_LOOKUP_SERVICE_HOST: '{{ worker_host }}'
      ACCOUNT_LOOKUP_SERVICE_PORT: '8090'
      PSQL_HOST: '{{ worker_host }}'
      PSQL_PORT: '8102'

- name: Start interop-account-lookup
  become: true
  docker_container:
    name: interop-account-lookup
    image: "mojaloop/interop-account-lookup:{{ v_interop_account_lookup }}"
    restart_policy: always
    state: started
    networks:
      - name: MOJALOOP_NET
    restart: yes
    log_driver: syslog
    log_options:
      syslog-address: 'tcp://{{ log_ip }}:514'
      syslog-facility: daemon
      tag: interop-account-lookup
    ports:
      - "8090:8090"
    env:
      SERVICE_8090_NAME: 'interop-account-lookup'
      MAX_JVM_MEMORY: '256'
      ACCOUNT_LOOKUP_SERVICE_HOST: '0.0.0.0'
      ACCOUNT_LOOKUP_SERVICE_PORT: '8090'
      SWITCH_SERVICE_HOST: '{{ worker_host }}'
      SWITCH_SERVICE_PORT: '8089'
      PSQL_HOST: '{{ worker_host }}'
      PSQL_PORT: '8102'

- name: Start interop-connector(s)
  become: true
  docker_container:
    name: interop-connector-{{ item.name }}
    image: "mojaloop/interop-connector:{{ v_interop_connector }}"
    restart_policy: always
    state: started
    networks:
      - name: MOJALOOP_NET
    restart: yes
    log_driver: syslog
    log_options:
      syslog-address: 'tcp://{{ log_ip }}:514'
      syslog-facility: daemon
      tag: interop-connector-{{ item.name }}
    ports:
      - "{{ item.port }}:8088"
    env:
      CONNECTOR_SERVICE_HOST: '0.0.0.0'
      CONNECTOR_SERVICE_PORT: '8088'
      CONNECTOR_ACCOUNT: '{{ item.name }}'
      FSP_SERVICE_HOST: '{{ item.dfsp_host }}'
      FSP_SERVICE_PORT: '8443'
      FSP_SERVICE_BASEPATH: '/scheme/adapter/ml-dfsp/v1'
      CENTRAL_LEDGER_HOST: '{{ worker_host }}'
      CENTRAL_LEDGER_PORT: '3002'
  with_items:
    - {name: 'dfsp1', port: '8091', dfsp_host: '{{ hostvars.dfsp1.ansible_host }}'}
    - {name: 'dfsp2', port: '8092', dfsp_host: '{{ hostvars.dfsp2.ansible_host }}'}

#- name: Register FSP(s) with the switch
#  uri:
#    url: http://{{ worker_host }}:8089/account/lookup/v1/fsp
#    method: POST
#    body: '{{"fspId":"{{ item.name }}", "baseUrl":"http://{{ item.dfsp_host }}/scheme/adapter/ml-dfsp/v1", "connectorPort": "{{ item.port }}"}}'
#    headers:
#      Content-Type: application/json
#      Accept: application/json
#  with_items:
#    - {name: 'dfsp1', port: '8091', dfsp_host: '{{ hostvars.dfsp1.ansible_host }}'}
#    - {name: 'dfsp2', port: '8092', dfsp_host: '{{ hostvars.dfsp2.ansible_host }}'}
#  register: output
#
#- debug:
#    var: output.stdout

- shell: "curl -X POST -H 'Content-Type: application/json' -H 'Accept: application/json' -d '{\"fspId\":\"{{ item.name }}\", \"baseUrl\":\"http://{{ item.dfsp_host }}:8443/scheme/adapter/ml-dfsp/v1\", \"connectorPort\": \"{{ item.port }}\"}' http://{{ worker_host }}:8090/account/lookup/v1/fsp"
  register: output
  with_items:
    - {name: 'dfsp1', port: '8091', dfsp_host: '{{ hostvars.dfsp1.ansible_host }}'}
    - {name: 'dfsp2', port: '8092', dfsp_host: '{{ hostvars.dfsp2.ansible_host }}'}


- debug:
    var: output.stdout

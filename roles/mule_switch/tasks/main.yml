# Ansible playbook for deploying the
# ilp-connector, ilp-spsp-client-rest, and ilp-spsp-server
# to the L1P test integration environment

# Note this must be run with the CLI param --extra-vars="docker_username=... docker_password=... docker_email=..."
---

- include_vars:
    file: versions/{{ env }}/modusboxversions.yml

- name: Start interop-mock-central-directory
  become: true
  docker_container:
    name: interop-mock-central-directory
    image: "modusbox-level1-docker-release.jfrog.io/leveloneproject/interop-mock-central-directory:{{ v_interop_mock_central_directory }}"
    restart_policy: always
    state: started
    networks:
      - name: MOJALOOP_NET
    restart: yes
    volumes: 
      - "/opt/mule/logs:/opt/mule/logs"
      - "/opt/mule/apps:/opt/mule/apps"
      - "/opt/mule/domains:/opt/mule/domains"
      - "/opt/mule/conf:/opt/mule/conf"
    log_driver: syslog
    log_options: 
      syslog-address: 'tcp://{{ log_ip }}:514'
      syslog-facility: daemon
      tag: interop-docker
    ports:
      - "8081:8081"
      - "8088:8088"
      - "8089:8089"
      - "9081:9081"
      - "9088:9088"
    env:
      MULE_ENV: '{{inventory_hostname}}-interop-mock-central-directory'
      SERVICE_8181_NAME: 'interop-mock-central-directory'
      SERVICE_8188_NAME: 'interop-mock-central-directory'
      SERVICE_9181_NAME: 'interop-mock-central-directory'
      SERVICE_9188_NAME: 'interop-mock-central-directory'
      MAX_JVM_MEMORY: '256'
      central-dir-env: 'mock'
      mock-central-dir.host: '{{ worker_host }}'
      mock-central-dir.port: '8088'
      metrics.reporter.kafka.broker: '{{ metrics_host_port }}'
      environment: 'switch1-test'
      metrics.reporter.environment: 'switch1-{{ name_tag }}'
      maxHttpThreadsActive: '16'
      maxHttpThreadsIdle: '4'

- name: start postgres
  docker_container:
    name: postgres-interop
    image: postgres:9.6.5
    env:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
      SERVICE_5432_NAME: 'postgres'
    ports: 8102:5432
    restart_policy: always

- name: Waiting to make sure postgres is started
  wait_for:
    port: 8102
    delay: 10

- postgresql_db:
    login_host: '{{ worker_host }}'
    port: 8102
    login_user: postgres
    login_password: postgres
    name: mojaloop
    encoding: UTF-8

- postgresql_user:
    login_host: '{{ worker_host }}'
    port: 8102
    login_user: postgres
    login_password: postgres
    db: mojaloop
    name: mojaloop
    password: 0f44a46921c79f9e179e9947f5fb6bf3
    encrypted: yes

- postgresql_schema:
    login_host: '{{ worker_host }}'
    port: 8102
    login_user: postgres
    login_password: postgres
    name: switch
    database: mojaloop
    owner: mojaloop